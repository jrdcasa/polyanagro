%% Example of within and between uncertainty analysis for Tg
clear all

%-------------------------------------------------------------------------
%-------------------------------------------------------------------------
%-------------------------- User inputs ----------------------------------
%-------------------------------------------------------------------------
%-------------------------------------------------------------------------

%Currently the file-reader that converts LAMMPS data to a format readable
%by the analysis scripts is set up to handle data generated from multiple
%different formats.  LAMMPScustom is the handle associated with the
%Anneal_1_02.in script; other options have been removed but can be added by
%users as they see fit
sourcetype='LAMMPScustom';

%Folder name where the raw data folders are stored; note that a forward or
%backslash (depending on the OS) is necessary for correct parsing of file
%locations.  Each subfolder within the directory should contain the results
%of a single simulation; see the Sample_Data folder for an example of how
%this should be set up.
fname='Sample_Data/';

% Computation settings; set to 1 to enable, 0 to disable

runinparallel=0;              %whether or not to use parallel processing
rejection=1;                  %whether or not to determine if a dataset should be rejected
%NOTE: in this version of the script, a "rejected" dataset is still used to
%compute the weighted-mean statistic, although it is straightforward to
%modify the script to remove such sets from being included in subsequent
%calculations.

% General settings (apply to all analysis routines unless otherwise noted)
numsyntheticsets=50;        %***** this needs to be large, at least 500  *****  how many synthetic data sets to generate (applies only to raw data sets, used to find within-simulation uncertainties);

%-------------------------------------------------------------------------
%-------------------------------------------------------------------------
%-------------------------------------------------------------------------
%-------------------------------------------------------------------------
%-------------------------- End user inputs ------------------------------
%-------------------------------------------------------------------------
%-------------------------------------------------------------------------
%-------------------------------------------------------------------------
%-------------------------------------------------------------------------

 
%Function that extracts density-temperature data from the folder that
%contains all of the simulation results.  The function
%Density_reader_1_01_multi performs this task.
[groupeddata,temperatures]=Density_reader_1_01_multi(fname,sourcetype);
numtemps=numel(temperatures);
dummy=size(groupeddata);
numsets=dummy(2);

figure(1)
plot(temperatures,groupeddata)
xlabel('Temperature (in K)')
ylabel('Density (in g/cm^3)')
title('Density-temperature curves for each dataset')

%Array initializations
withintgs=zeros(1,numsets);
withinvars=zeros(1,numsets);
withinrejections=zeros(1,numsets);

%Loop that computes the Tg estimates associated with each dataset and the
%corresponding within-simulation uncertainties.  Note that it invokes the
%TG_bootstrap function to perform this task.
for jjjj=1:numsets
    %figures generated by TG_bootstrap function are disabled by default;
    %can be enabled by changing 0 to 1 in the fifth entry of the function
   [withintgs(jjjj),withinvars(jjjj),~,withinrejections(jjjj)]=TG_bootstrap(groupeddata(:,jjjj),temperatures,numsyntheticsets,rejection,0,runinparallel); 
end

%For convenience, sorts Tg estimates in ascending order of within uncertainty
[~,indices]=sort(withinvars);
withintgs=withintgs(indices);

withinvars=withinvars(indices);
withinrejections=withinrejections(indices);

%%

%An easter-egg if you've made it this far
%[darkuc,MPavg,varout]=MandelPaule1_03(withintgs,withinvars,0,4000);

%Computes the consensus statistic (MPavg), dark uncertainty (darkuc) and
%total uncertainty in the consensus estimate (varout).  This is performed
%using a maximum likelihood estimate.
[darkuc,MPavg,varout]=Dark_MLE(withintgs,withinvars,0,4000);

%Plot of results.  For N total datasets, the first N entries are the
%individual Tg estimates with corresponding within-simulation
%uncertainties.  The penultimate datapoint is the consensus mean with the
%dark uncertainty.  The last datapoint is the consensus mean with total
%uncertainty.  
figure(2)
plot(withintgs,'x','MarkerSize',20,'LineWidth',4)
hold on
plot([jjjj+1],[MPavg],'ko','MarkerSize',20,'LineWidth',4)
plot([jjjj+2],[MPavg],'go','MarkerSize',20,'LineWidth',4)

xlabel('Dataset')
ylabel('T_g (in K)')
legend('Individual T_g estimates and within uncertainties','Consensus mean w/ dark uncertainty','Consensus mean w/ total uncertainty')
title('Individual Tg estimates and consensus mean')
for jjjj=1:numsets
  plot([jjjj,jjjj],[withintgs(jjjj)-sqrt(withinvars(jjjj)),withintgs(jjjj)+sqrt(withinvars(jjjj))],'r','LineWidth',3)
end
plot([jjjj+1,jjjj+1],[MPavg-sqrt(darkuc),MPavg+sqrt(darkuc)],'b','LineWidth',3)
plot([jjjj+2,jjjj+2],[MPavg-sqrt(varout),MPavg+sqrt(varout)],'m','LineWidth',3)

disp(' ')
disp(' ')
disp(' ')
disp('Consensus mean value of Tg (in K)')
disp(MPavg)
disp('Dark uncertainty (between-simulation uncertainty; in K)')
disp(sqrt(darkuc))
disp('Total uncertainty (one "standard-deviation" in K)')
disp(sqrt(varout))